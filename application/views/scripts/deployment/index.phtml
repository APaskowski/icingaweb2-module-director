<?php

use Icinga\Util\Format;

$view = $this;
$logLink = function ($match, $severity) use ($view) {
    $stageDir = $match[1];
    $filename = $match[2];
    $suffix = $match[3];
    if (preg_match('/(\d+).*/', $suffix, $m)) {
        $lineNumber = $m[1];
    } else {
        $lineNumber = null;
    }

    $params = array(
        'config_checksum'   => $view->config_checksum,
        'file_path'         => $filename,
        'deployment_id'     => $view->deployment->id,
        'fileOnly'          => true,
    );
    if ($lineNumber !== null) {
        $params['highlight']         = $lineNumber;
        $params['highlightSeverity'] = $severity;
    }

    return $view->qlink(
        '[stage]/' . $filename,
        'director/config/file',
        $params,
        array(
            'data-base-target' => '_next',
            'title'            => $stageDir . $filename
        )
    ) . $suffix;
};

function colorize($log, $logLink) {

    $lines = array();
    $severity = 'information';
    $sevPattern = '/^(debug|notice|information|warning|critical)\/(\w+)/';
    $filePatternHint = '~(/[\w/]+/api/packages/director/[^/]+/)([^:]+\.conf)(: (\d+))~';
    $filePatternDetail = '~(/[\w/]+/api/packages/director/[^/]+/)([^:]+\.conf)(\((\d+)\))~';
    $markPattern = null;
    // len [stage] + 1
    $markReplace = '        ^';
    foreach (preg_split('/\n/', $log) as $line) {
        if (preg_match($sevPattern, $line, $m)) {
            $severity = $m[1];
            $line = preg_replace(
                $sevPattern,
                '<span class="loglevel \1">\1</span>/<span class="application">\2</span>',
                $line
            );
        }

        if ($markPattern !== null) {
            $line = preg_replace($markPattern, $markReplace, $line);
        }
        $line = preg_replace('/([\^]{2,})/', '<span class="error-hint">\1</span>', $line);
        $markPattern = null;

        if (preg_match($filePatternHint, $line, $m)) {
            $line = preg_replace_callback(
                $filePatternHint,
                function ($matches) use ($logLink, $severity) {
                    return $logLink($matches, $severity);
                },
                $line
            );
            $line = preg_replace('/\(in/', "\n  (in", $line);
            $line = preg_replace('/\), new declaration/', "),\n  new declaration", $line);
        } elseif (preg_match($filePatternDetail, $line, $m)) {
            $markIndent = strlen($m[1]);
            $markPattern = '/\s{' . $markIndent . '}\^/';

            $line = preg_replace_callback(
                $filePatternDetail,
                function ($matches) use ($logLink, $severity) {
                    return $logLink($matches, $severity);
                },
                $line
            );
        }


        $lines[] .= $line;
    }
    return implode("\n", $lines);
}

?><div class="controls">
<?= $this->tabs ?>
<h1><?= $this->escape($this->title) ?></h1>
</div>

<div class="content">
<table class="name-value-table">
 <tr>
  <th><?= $this->translate('Deployment time') ?></th>
  <td><?= $deployment->start_time ?></td>
 </tr>
 <tr>
  <th><?= $this->translate('Sent to') ?></th>
  <td><?= $deployment->peer_identity ?></td>
 </tr>
 <tr>
  <th><?= $this->translate('Configuration') ?></th>
  <td><?= $this->qlink(
    sprintf(
        $this->translate('%d files'),
        $this->config->getFileCount()
    ),
    'director/config/files',
    array(
        'checksum'      => $config_checksum,
        'deployment_id' => $deployment->id
    )
) ?>, <?= sprintf(
    $this->translate('%d objects, %d templates, %d apply rules'),
    $config->getObjectCount(),
    $config->getTemplateCount(),
    $config->getApplyCount()
  )?>, <?= Format::bytes($config->getSize()) ?></td>
 </tr>
 <tr>
  <th><?= $this->translate('Duration') ?></th>
  <td><?= sprintf(
      $this->translate('Rendered in %0.2fs, deployed in %0.2fs'),
      $config->getDuration() / 1000,
      $deployment->duration_dump / 1000
  ) ?></td>
 </tr>
 <tr>
  <th><?= $this->translate('Stage name') ?></th>
  <td><?= $deployment->stage_name ?></td>
 </tr>
 <tr>
  <th><?= $this->translate('Startup') ?></th>
  <td><?php

if ($deployment->startup_succeeded === null) {
    if ($deployment->stage_collected === null) {
        echo $this->translate('Unknown, still waiting for config check outcome') . ' ' . $this->icon('spinner');
    } else {
        echo $this->translate('Unknown, failed to collect related information') . ' ' . $this->icon('help');
    }
} elseif ($deployment->startup_succeeded === 'y') {
    echo '<div style="color: green">';
    echo $this->translate('Succeeded') . ' ' . $this->icon('ok');
    echo '</div>';
} else {
    echo '<div style="color: red">';
    echo $this->translate('Failed') . ' ' . $this->icon('cancel');
    echo '</div>';
}

  ?></td>
 </tr>
</table>
<?php if ($deployment->startup_succeeded !== null): ?>
<h2>Startup log</h2>
<pre class="logfile">
<?= colorize(
    $this->escape($deployment->startup_log),
    $logLink
) ?>
</pre>
<?php endif ?>
</div>
